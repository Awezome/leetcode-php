<?php
/**
 * User: zyp
 * Date: 2019-04-06
 * Time: 17:13
 */
class Solution {

    /**
     * @param String $s
     * @return Integer
     */
    function numDecodings($s) {
        $dp = [];
        $len = strlen($s);          //初始化动态规划数组和长度
        if($len == 0) return 0;     //若长度为0，不能编码，直接返回0
        //初始化前两个数组的编码种类
        $dp[0] = $s[0] == '0' ? 0:1;
        if($len == 1) return $dp[0];//当长度为 1 时，返回第一个字母的动态规划解
        $flag = ($s[0] > 0 && $s[1] > 0) ? 1:0; //判断前两位有 0 的特殊情况
        $dp[1] = $flag + (($s[0] == 1 || ($s[0] == 2 && $s[1] <= 6)) ? 1:0);              //小于26时，再+1种可能
        for($i = 2;$i<$len;++$i){                   //从第3位继续计算
            //如果当前的数字为 0 ，需要与前一位一起考虑，不单独考虑
            $dp[$i] = $s[$i] == 0 ? 0:$dp[$i-1];
            //当前位置跟前一位是否<=26，如果符合，则在 $i - 2 位上解码
            $dp[$i] += ($s[$i-1] == 1 || ($s[$i-1] == 2 && $s[$i] <= 6)) ? $dp[$i-2] : 0;
        }
        return $dp[$len-1];
    }
}
